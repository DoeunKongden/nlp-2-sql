import logging
import matplotlib.pyplot as plt
import seaborn as sns
from io import BytesIO
import traceback

logger = logging.getLogger(__name__)


def execute_plot_code(plot_code: str, results):
    buf = BytesIO()
    try:
        # Convert results to a format that the plot code expects
        result = results  # Rename `results` to `result` for compatibility with the AI-generated code

        if not result or len(result) == 0:
            raise ValueError("No data available for plotting.")

        print(f"Data Columns: {list(result[0].keys())}")

        # Set up execution environment and pass the results as `result`
        exec_globals = {
            'plt': plt,
            'sns': sns,
            'result': result  # Pass `result` which the AI-generated code expects
        }

        # Execute the AI-generated plot code
        print(f"Executing plot_code: {plot_code}")

        try:
            exec(plot_code, exec_globals)
        except Exception as e:
            logger.error(f"Error executing plot code: {str(e)}")
            return None

        # Save the plot to a buffer if a figure is generated
        if plt.get_fignums():  # Check if any figure was generated
            plt.savefig(buf, format='png')
            plt.close('all')
            buf.seek(0)
            return buf
        else:
            raise Exception("No figure was generated by the plotting code.")

    except Exception as e:
        print(f"Error executing plot code: {traceback.format_exc()}")
        raise e
