import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
from io import BytesIO
import traceback
import re


def execute_plot_code(plot_code: str, results):
    buf = BytesIO()
    try:
        # Convert results to Dataframe
        data = pd.DataFrame(results)

        if data.empty:
            raise ValueError("The SQL query did not return any data. Please check your queries or database")

        print(f"Data Columns: {data.columns}")

        # Automatically replace invalid column names in the plot code
        if 'mal_id' in plot_code and 'mal_id' not in data.columns:
            plot_code = plot_code.replace("mal_id",data.columns[0])

        if 'name' in plot_code and 'name' not in data.columns:
            plot_code = plot_code.replace("name",data.columns[1])
        # Clean the plot code: replace 'None' values in plot code if necessary
        plot_code = re.sub(r"'type': None", "'type': 'Unknown'", plot_code)

        print(f"Executing plot_code: {plot_code}")

        # Execute the plot code in a restricted environment
        exec_globals = {
            'plt': plt,
            'sns': sns,
            'data': data  # The DataFrame to use in plotting
        }

        # Execute the AI-generated code
        exec(plot_code, exec_globals)

        # Save figure to buffer
        if plt.get_fignums():  # check if any figure was generated
            plt.savefig(buf, format='png')
            plt.close('all')
            buf.seek(0)  # Move to start of buffer to return it
            return buf
        else:
            raise Exception("No figure was generated by the plotting code.")

    except Exception as e:
        print(f"Error executing plot code : {traceback.format_exc()}")
        raise e
